---
- hosts: server
  become: true

  tasks:
    - name: Install Docker
      apt:
        name:
          - docker.io
          - docker-compose
        state: present

    - name: Copy files to server
      copy:
        src: "{{ item }}"
        dest: "/home/user/wordpress/"
      with_items:
        - nginx.config
        - default.config

    - name: Start WordPress container
      command: "docker-compose up -d"
      args:
        chdir: "/home/user/wordpress/"

    - name: Install Certbot
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present

    - name: Generate SSL/TLS certificate
      shell: "certbot --nginx --agree-tos --redirect --email youremail@example.com --domains example.com"
      register: certbot_result
      changed_when: certbot_result.stdout_lines | search('Congratulations! Your certificate and chain have been saved')

    - name: Copy certificate to Nginx container
      copy:
        src: "/etc/letsencrypt/live/example.com/"
        dest: "/home/user/wordpress/certbot/"
        mode: 0644

    - name: Restart Nginx container
      command: "docker restart nginx"
      args:
        chdir: "/home/user/wordpress/"
      notify:
        - Enable UFW
        - Reload Nginx
        - Restart Docker

    - name: Configure Grafana
      become: true
      vars:
        grafana_admin_user: admin
        grafana_admin_password: mypassword
        grafana_datasource_name: mydatasource
        grafana_dashboard_name: mydashboard
      tasks:
        - name: Install Grafana
          apt:
            name: "{{ item }}"
            state: present
          loop:
            - apt-transport-https
            - software-properties-common
            - wget
          tags:
            - grafana

        - name: Add Grafana APT key
          apt_key:
            url: https://packages.grafana.com/gpg.key
            state: present
          tags:
            - grafana

        - name: Add Grafana APT repository
          apt_repository:
            repo: deb https://packages.grafana.com/oss/deb stable main
            state: present
            filename: grafana.list
          tags:
            - grafana

        - name: Install Grafana
          apt:
            name: grafana
            state: present
          tags:
            - grafana

        - name: Start Grafana service
          service:
            name: grafana-server
            state: started
            enabled: yes
          tags:
            - grafana

        - name: Add Grafana datasource
          grafana_datasource:
            name: "{{ grafana_datasource_name }}"
            type: prometheus
            url: http://localhost:9090
            access: proxy
            is_default: true
            basic_auth_user: "{{ grafana_admin_user }}"
            basic_auth_password: "{{ grafana_admin_password }}"
            state: present
          tags:
            - grafana

        - name: Add Grafana dashboard
          grafana_dashboard:
            name: "{{ grafana_dashboard_name }}"
            file: /path/to/mydashboard.json
            folder_id: 0
            overwrite: true
            basic_auth_user: "{{ grafana_admin_user }}"
            basic_auth_password: "{{ grafana_admin_password }}"
            state: present
          tags:
            - grafana

  handlers:
    - name: Enable UFW
      ufw:
        rule: allow
        port: "80/tcp"
        state: enabled

    - name: Reload Nginx
      systemd:
        name: nginx
        state: restarted

    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
